basePath: /api/v1
definitions:
  controllers.PingSwag:
    properties:
      health:
        example: ok
        type: string
    type: object
  request.CreateTodo:
    properties:
      description:
        example: Desc TODO
        type: string
      title:
        example: Title TODO
        type: string
    type: object
  views.CreateTodoFailureSwag:
    properties:
      additional_info:
        additionalProperties:
          type: string
        example:
          error: Title harus diisi
        type: object
      error:
        example: Bad Request
        type: string
      message:
        example: Create Todo Fail
        type: string
      status:
        example: 400
        type: integer
    type: object
  views.CreateTodoPayload:
    properties:
      created_at:
        type: string
      description:
        example: Desc TODO
        type: string
      id:
        example: 1
        type: integer
      title:
        example: Title TODO
        type: string
    type: object
  views.CreateTodoSuccessSwag:
    properties:
      message:
        example: Create Todo Success
        type: string
      payload:
        $ref: '#/definitions/views.CreateTodoPayload'
      status:
        example: 201
        type: integer
    type: object
  views.DeleteTodoByIdSuccessSwag:
    properties:
      message:
        example: Get Todo By ID Success
        type: string
      payload:
        $ref: '#/definitions/views.GetTodoPayload'
      status:
        example: 200
        type: integer
    type: object
  views.DeleteTodoFailureSwag:
    properties:
      error:
        example: Data Not Found
        type: string
      message:
        example: Delete Todo Fail
        type: string
      status:
        example: 404
        type: integer
    type: object
  views.GetTodoByIdSuccessSwag:
    properties:
      message:
        example: Get Todo By ID Success
        type: string
      payload:
        $ref: '#/definitions/views.GetTodoPayload'
      status:
        example: 200
        type: integer
    type: object
  views.GetTodoPayload:
    properties:
      created_at:
        type: string
      description:
        example: Desc TODO
        type: string
      id:
        example: 1
        type: integer
      title:
        example: Title TODO
        type: string
    type: object
  views.GetTodosFailureSwag:
    properties:
      error:
        example: Data Not Found
        type: string
      message:
        example: Data Is Empty
        type: string
      status:
        example: 404
        type: integer
    type: object
  views.GetTodosSuccessSwag:
    properties:
      message:
        example: Get All Todos Success
        type: string
      payload:
        items:
          $ref: '#/definitions/views.GetTodoPayload'
        type: array
      status:
        example: 200
        type: integer
    type: object
  views.UpdateTodoByIdSuccessSwag:
    properties:
      message:
        example: Get Todo By ID Success
        type: string
      payload:
        $ref: '#/definitions/views.GetTodoPayload'
      status:
        example: 200
        type: integer
    type: object
  views.UpdateTodoFailureSwag:
    properties:
      additional_info:
        additionalProperties:
          type: string
        example:
          error: Title harus diisi
        type: object
      error:
        example: Bad Request
        type: string
      message:
        example: Update Todo Fail
        type: string
      status:
        example: 400
        type: integer
    type: object
host: localhost:4444
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Hactiv8 Swagger
  version: "1.0"
paths:
  /Ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PingSwag'
      summary: ping example
      tags:
      - Health
  /todos:
    get:
      consumes:
      - application/json
      description: get all todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.GetTodosSuccessSwag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/views.GetTodosFailureSwag'
      summary: Get All TODOS
      tags:
      - TODOS
    post:
      consumes:
      - application/json
      description: create todo
      parameters:
      - description: CreateToDo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateTodo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.CreateTodoSuccessSwag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.CreateTodoFailureSwag'
      summary: Create TODO
      tags:
      - TODOS
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete TODO by id
      parameters:
      - description: Request Param
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.DeleteTodoByIdSuccessSwag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/views.DeleteTodoFailureSwag'
      summary: Delete TODO by id
      tags:
      - TODOS
    get:
      consumes:
      - application/json
      description: Get Todo By Id
      parameters:
      - description: Request Param
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.GetTodoByIdSuccessSwag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/views.GetTodosFailureSwag'
      summary: Get Todo By Id
      tags:
      - TODOS
    put:
      consumes:
      - application/json
      description: Update TODO By Id
      parameters:
      - description: Request Param
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateTodo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateTodo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/views.UpdateTodoByIdSuccessSwag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/views.UpdateTodoFailureSwag'
      summary: Update TODO By Id
      tags:
      - TODOS
swagger: "2.0"
